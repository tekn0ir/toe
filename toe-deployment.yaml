apiVersion: v1
kind: ServiceAccount
metadata:
  name: toe
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: toe
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: toe
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: toe
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toe
  template:
    metadata:
      labels:
        app: toe
    spec:
      serviceAccountName: toe
      containers:
      - name: toe
        image: tekn0ir/toe:latest
        imagePullPolicy: Always
        env:
        - name: TOE_PROJECT
          value: "teknoir-poc"
        - name: TOE_IOT_REGISTRY
          value: "teknoir-iot-registry-poc"
        - name: TOE_DEVICE
          value: "go_client_test"
        - name: TOE_CA_CERT
          value: "/toe_conf/roots.pem"
        - name: TOE_PRIVATE_KEY
          value: "/toe_conf/rsa_private.pem"
        volumeMounts:
        - mountPath: /toe_conf
          name: toe-volume
      volumes:
      - name: toe-volume
        hostPath:
          # directory location on host
          path: /home/pi/toe_conf
---
apiVersion: v1
kind: Service
metadata:
  name: hmq
  namespace: kube-system
spec:
  selector:
    app: hmq
  ports:
    - protocol: TCP
      port: 1883
      targetPort: 1883
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hmq
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hmq
  template:
    metadata:
      labels:
        app: hmq
    spec:
      containers:
        - name: toe
          image: tekn0ir/hmq:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 1883

